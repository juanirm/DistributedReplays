version: "3"
services:
  postgres:
    image: postgres:10-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - "${POSTGRES_VOLUME:-calculated.gg.postgres}:${POSTGRES_MOUNT:-/var/lib/postgresql/data}"

  redis:
    image: redis:4-alpine
    restart: always
    volumes:
      - "${REDIS_VOLUME:-calculated.gg.redis}:${REDIS_MOUNT:-/data}"
  
  nginx:
    build: 
      dockerfile: Dockerfile
      context: ./nginx
    restart: always
    ports:
      - "${LB_PORT:-80}:80"
    depends_on:
      - flask
      - webapp

  flask:
    build: .
    image: distributed-replays-python
    command: "python ./RLBotServer.py"
    env_file:
      - ".env"
    ports:
      - "${FLASK_PORT:-8000}:${FLASK_PORT:-8000}"
    depends_on:
      - postgres
      - redis
    volumes:
      - "${REPLAYS_VOLUME:-calculated.gg.replays}:${REPLAYS_MOUNT:-/app/data}"

  celery:
    image: distributed-replays-python
    command: celery -A backend.tasks.celery_tasks.celery worker --loglevel=INFO
    env_file:
      - ".env"
    depends_on:
      - redis
      - flask
    volumes:
      - "${REPLAYS_VOLUME:-calculated.gg.replays}:${REPLAYS_MOUNT:-/app/data}"

  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    env_file:
      - ".env"
    ports:
      - 3000:3000

volumes:
  calculated.gg.postgres:
  calculated.gg.redis:
  calculated.gg.replays:
